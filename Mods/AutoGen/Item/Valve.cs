// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated />

namespace Eco.Mods.TechTree
{
        using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using Eco.Gameplay.Blocks;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Objects;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.Core.Items;
    using Eco.World;
    using Eco.World.Blocks;
    using Eco.Gameplay.Pipes;

    [RequiresSkill(typeof(MechanicsSkill), 1)]      
    public partial class ValveRecipe :
        RecipeFamily
    {
        public ValveRecipe()
        {
            this.Initialize(Localizer.DoStr("Valve"), typeof(ValveRecipe));
            this.Recipes = new List<Recipe>
            {
                new Recipe(
                    "Valve",
                    Localizer.DoStr("Valve"),
                    new IngredientElement[]
                    {
                    new IngredientElement(typeof(SteelPipeItem), 4, typeof(MechanicsSkill), typeof(MechanicsLavishResourcesTalent)), 
                    new IngredientElement(typeof(SteelPlateItem), 4, typeof(MechanicsSkill), typeof(MechanicsLavishResourcesTalent)),    
                    new IngredientElement(typeof(SteelGearboxItem), 1, true),  
                    },
                    new CraftingElement[]
                    {
                    new CraftingElement<ValveItem>(), 
                    }
                )
            };


            this.ExperienceOnCraft = 4;  

            this.LaborInCalories = CreateLaborInCaloriesValue(100, typeof(MechanicsSkill), typeof(ValveRecipe), this.UILink()); 
            this.CraftMinutes = CreateCraftTimeValue(typeof(ValveRecipe), this.UILink(), 3, typeof(MechanicsSkill), typeof(MechanicsFocusedSpeedTalent), typeof(MechanicsParallelSpeedTalent));     
            this.Initialize(Localizer.DoStr("Valve"), typeof(ValveRecipe));

            CraftingComponent.AddRecipe(typeof(ElectricMachinistTableObject), this);
        }
    }

    [Serialized]
    [LocDisplayName("Valve")]
    [Weight(500)]      
    [Currency] 
    [Ecopedia("Items", "Products", createAsSubPage: true, display: InPageTooltip.DynamicTooltip)]                                                                           
    public partial class ValveItem :
    Item                                    
    {
        public override LocString DisplayDescription { get { return Localizer.DoStr("A device that regulates, directs, or controls the flow of fluid."); } }
    }
}
