// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated />

namespace Eco.Mods.TechTree
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using Eco.Gameplay.Blocks;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Objects;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Core.Items;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.World;
    using Eco.World.Blocks;
    using Eco.Gameplay.Pipes;

    [RequiresSkill(typeof(MiningSkill), 1)]
    public partial class CrushedGoldOreRecipe :
        RecipeFamily
    {
        public CrushedGoldOreRecipe()
        {
            this.Initialize(Localizer.DoStr("Crushed Gold Ore"), typeof(CrushedGoldOreRecipe));
            this.Recipes = new List<Recipe>
            {
                new Recipe(
                    "CrushedGoldOre",
                    Localizer.DoStr("Crushed Gold Ore"),
                    new IngredientElement[]
                    {
                    new IngredientElement(typeof(GoldOreItem), 12, true),
                    },
                    new CraftingElement[]
                    {
                    new CraftingElement<CrushedGoldOreItem>(2),

                   new CraftingElement<CrushedGraniteItem>(1)
                    }
                )
            };
            this.LaborInCalories = CreateLaborInCaloriesValue(100, typeof(MiningSkill), typeof(CrushedGoldOreRecipe), this.UILink());
            this.ExperienceOnCraft = 0.5f;
            this.CraftMinutes = CreateCraftTimeValue(typeof(CrushedGoldOreRecipe), this.UILink(), 1.5f, typeof(MiningSkill));
            this.Initialize(Localizer.DoStr("Crushed Gold Ore"), typeof(CrushedGoldOreRecipe));

            CraftingComponent.AddRecipe(typeof(ArrastraObject), this);

        }
    }

    [Serialized]
    [Solid, Wall, Diggable]
    [RequiresSkill(typeof(MiningSkill), 1)]
    public partial class CrushedGoldOreBlock :
        Block
        , IRepresentsItem
    {
        public Type RepresentedItemType { get { return typeof(CrushedGoldOreItem); } }
    }

    [Serialized]
    [LocDisplayName("Crushed Gold Ore")]
    [MaxStackSize(10 * 2)]
    [Weight(30000)]
    [StartsDiscovered]
    [Ecopedia("Blocks", "Processed Rock", createAsSubPage: true, display: InPageTooltip.DynamicTooltip)]
    [Currency]
    [RequiresTool(typeof(ShovelItem))]
    public partial class CrushedGoldOreItem :
    BlockItem<CrushedGoldOreBlock>
    {
        public override LocString DisplayNamePlural { get { return Localizer.DoStr("Crushed Gold Ore"); } }
        public override LocString DisplayDescription { get { return Localizer.DoStr("Crushed gold ore that is ready to be concentrated."); } }

        public override bool CanStickToWalls { get { return false; } }
    }

}
