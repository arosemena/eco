// Copyright (c) Strange Loop Games. All rights reserved.
// See LICENSE file in the project root for full license information.
// <auto-generated />

namespace Eco.Mods.TechTree
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using Eco.Gameplay.Blocks;
    using Eco.Gameplay.Components;
    using Eco.Gameplay.DynamicValues;
    using Eco.Gameplay.Items;
    using Eco.Gameplay.Objects;
    using Eco.Gameplay.Players;
    using Eco.Gameplay.Skills;
    using Eco.Gameplay.Systems;
    using Eco.Gameplay.Systems.TextLinks;
    using Eco.Core.Items;
    using Eco.Shared.Localization;
    using Eco.Shared.Serialization;
    using Eco.Shared.Utils;
    using Eco.World;
    using Eco.World.Blocks;
    using Eco.Gameplay.Pipes;

    [RequiresSkill(typeof(MasonrySkill), 2)]
    public partial class MortaredGraniteRecipe :
        Recipe
    {
        public MortaredGraniteRecipe()
        {
            var product = new Recipe(
                "MortaredGranite",
                Localizer.DoStr("Mortared Granite"),
                new IngredientElement[]
                {
                    new IngredientElement(typeof(GraniteItem), 4, typeof(MasonrySkill), typeof(MasonryLavishResourcesTalent)),
                    new IngredientElement(typeof(MortarItem), 1, typeof(MasonrySkill), typeof(MasonryLavishResourcesTalent)),
                },

				new CraftingElement[]
                {
                    new CraftingElement<MortaredGraniteItem>()
				});
            CraftingComponent.AddTagProduct(typeof(MasonryTableObject), typeof(MortaredStoneRecipe), product);

        }
    }

    [Serialized]
    [Solid, Wall, Constructed,BuildRoomMaterialOption]
    [BlockTier(1)]
    [RequiresSkill(typeof(MasonrySkill), 2)]
    public partial class MortaredGraniteBlock :
        Block
        , IRepresentsItem
    {
        public Type RepresentedItemType { get { return typeof(MortaredGraniteItem); } }
    }

    [Serialized]
    [LocDisplayName("Mortared Granite")]
    [MaxStackSize(15 * 2)]
    [Weight(10000)]
    [Ecopedia("Blocks", "Building Materials", createAsSubPage: true, display: InPageTooltip.DynamicTooltip)]
    [Currency]
    [Tag("MortaredStone", 1)]
    [Tag("Constructable", 1)]
    [Tier(1)]
    public partial class MortaredGraniteItem :
    BlockItem<MortaredGraniteBlock>
    {
        public override LocString DisplayDescription { get { return Localizer.DoStr("Used to create tough but rudimentary buildings."); } }

        public override bool CanStickToWalls { get { return false; } }

        private static Type[] blockTypes = new Type[] {
        typeof(MortaredGraniteStacked1Block),
        typeof(MortaredGraniteStacked2Block),
            typeof(MortaredGraniteStacked3Block)
        };
        public override Type[] BlockTypes { get { return blockTypes; } }
    }

    [Serialized, Solid] public class MortaredGraniteStacked1Block : PickupableBlock { }
    [Serialized, Solid] public class MortaredGraniteStacked2Block : PickupableBlock { }
    [Serialized, Solid,Wall] public class MortaredGraniteStacked3Block : PickupableBlock { } //Only a wall if it's all 4 MortaredGranite
}
